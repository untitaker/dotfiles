#!/bin/bash
set -e
set -o pipefail

_watch() {
    local path="$1"
    local collection="$(_path2collection $path)"
    (
        echo "Initial sync"
        while true; do
            inotifywait \
                -rq \
                -e create -e delete -e move \
                -t 1200 \
                --include='.(vcf|ics)$' \
                "$path" || [ "$?" == "2" ]
        done
    ) | while read event; do  # exit 2 is for timeouts
        echo -e "$collection: $C_RED$event$C_RESET" 1>&2
        echo "sync $collection"
        echo "!vsy autocommit $path"
    done | vdirsyncer repl 2>&1 | while read line; do
        echo "$collection: $line"
    done
}

_path2collection() {
    echo "${1//\/home\/untitaker\/\./}"
}

autocommit() {
    local path="$1"
    local collection="$(_path2collection "$path")"
    cd "$path"
    git init -q
    if _is_dirty; then
        git add -A
        git commit --allow-empty -m "$(date)"
    else
        echo "Nothing to commit"
    fi
}

_is_dirty() {
    (! git diff-index --quiet HEAD) ||
        [[ $(git status --porcelain | tail -n1) != "" ]]
}

main() {
    trap 'kill $(jobs -p) &> /dev/null' TERM EXIT
    for dir in ~/.calendars/* ~/.contacts; do
        _watch "$dir" &
    done
    wait
}

if [ -z "$1" ]; then
    main
else
    $@
fi
