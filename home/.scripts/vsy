#!/bin/bash
set -e

_inotifywait() {
    local path="$1"
    echo "Watching $path"
    inotifywait -rq -e create -e delete -e move -t 1200 --include='.(vcf|ics)$' "$path" || \
        [ "$?" == "2" ]  # exit 2 is for timeouts
}

_path2collection() {
    echo "${1//\/home\/untitaker\/\./}"
}

_sync() {
    local path="$1"
    local collection="$(_path2collection "$path")"
    local logtmp="/tmp/${RANDOM}.tmp"
    (vdirsyncer sync "$collection" 2>&1 | tee "$logtmp") || \
        echo -e "$C_RED\"sync $collection\" finished with ${?}$C_RESET"
    cd "$path"
    git init -q
    if _is_dirty; then
        git add -A
        git commit --allow-empty -m "$(cat $logtmp)"
    fi
    rm "$logtmp"
}

_is_dirty() {
    (! git diff-index --quiet HEAD) ||
        [[ $(git status --porcelain | tail -n1) != "" ]]
}

_watch() {
    local path="$1"
    while true; do
        _sync "$path"
        _inotifywait "$path"
        sleep 0.1
    done
    echo -e "${C_RED}Error happened.$C_RESET"
}

main() {
    trap 'kill $(jobs -p) &> /dev/null' TERM EXIT
    for dir in ~/.calendars/* ~/.contacts; do
        _watch "$dir" &
    done
    wait
}

main "$@"
