#!/bin/sh

USAGE_HELP="Usage: $0 COMMAND
Commands:
    index:
        Rewrite/create the index.
    mutt-query <query>:
        Search for contact, output is usable for mutt's query_command.
    file-query <query>:
        Search for contact, return just the filename.
    add:
        Take mail from stdin, add sender to contacts. Print filename.
    edit <file-or-query>:
        Open contact (given by filepath or search-string) in \$MATES_EDITOR. If
        the file is cleared, the contact is removed.

Environment variables:
    MATES_DIR: Path to vdir collection.
    MATES_INDEX: Path to index file.
    MATES_GREP: Optional, grep binary to use.
    MATES_EDITOR: The editor to use. Default to \$EDITOR."


err() {
    local msg="$1"
    [ -n "$msg" ] && echo "$msg"
    exit 1
}


main() {
    [ -n "$MATES_DIR" ] || err "You need to set \$MATES_DIR"
    [ -n "$MATES_INDEX" ] || err "You need to set \$MATES_INDEX"
    [ -n "$MATES_GREP" ] || MATES_GREP='grep -i'
    [ -n "$MATES_EDITOR" ] || MATES_EDITOR="$EDITOR"
    [ -n "$MATES_EDITOR" ] || err "You need to set either \$MATES_EDITOR or \$EDITOR."

    cmd="$1"
    shift

    case "$cmd" in
        index)       command_index ;;
        mutt-query)  command_mutt_query "$@" ;;
        file-query)  command_file_query "$@" ;;
        add)         command_add "$@" ;;
        edit)        command_edit "$@" ;;
        *)           command_help ;;
    esac
}

get_index() {
    find "$MATES_DIR" -mindepth 1 -name "*.vcf" | while read fname; do
        local name="$($MATES_GREP '^FN:' "$fname" | cut -d ':' -f '2-' | head -1)"
        local emails="$($MATES_GREP '^EMAIL' "$fname" | cut -d ':' -f '2-')"
        for email in $emails; do
            printf "%s\t%s\t%s\n" "$email" "$name" "$fname"
        done
    done | sed -e 's/\r//g'
}

command_index() {
    get_index > "$MATES_INDEX"
}

add_contact() {
    local header="$($MATES_GREP "^From:" | sed -e 's/^From: //')"
    local email="$(echo "$header" | sed -e 's/[^<]*<\(.*\)>/\1/')"
    local name="$(echo "$header" | sed -e 's/ *<[^>]*> *//')"

    while [ -z "$uid" ] || [ -f "$filename" ]; do
        local uid="$(uuidgen)"
        local filename="$MATES_DIR/${uid}.vcf"
        local tmpname="$MATES_DIR/${uid}.tmp"
    done

    echo "BEGIN:VCARD
VERSION:3.0
FN:$name
EMAIL:$email
UID:$uid
END:VCARD" > "$tmpname"
    mv -n "$tmpname" "$filename"
    echo "$filename"
}


command_add() {
    add_contact
    command_index
}


command_edit() {
    local filename="$1"
    if [ ! -f "$filename" ]; then
        filename="$(command_file_query "$filename")"
        echo "$filename"
        if [ "$(echo "$filename" | wc -l)" != "1" ]; then
            err "Ambiguous query."
        fi
    fi
    # clear stdin, http://unix.stackexchange.com/a/77593
    sh -c '$0 -- "$1" <$2' "$MATES_EDITOR" "$filename" /dev/tty

    if [ -z "$(cat "$filename")" ]; then
        rm "$filename"
        err "Contact empty, removed."
    else
        command_index
    fi
}


command_mutt_query() {
    echo
    $MATES_GREP "$1" "$MATES_INDEX" | cut -f '-2'
}


command_file_query() {
    $MATES_GREP "$1" "$MATES_INDEX" | cut -f '3-'
}


command_help() {
    err "$USAGE_HELP"
}

main "$@"
